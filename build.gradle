apply plugin: 'maven-publish'
apply plugin: 'java-library'

allprojects {

    apply plugin: 'maven-publish'
    apply plugin: 'java-library'

    group 'dev.implario'
    version '2.2.2'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.incremental = true
        options.compilerArgs << '-parameters'
    }

    dependencies {
        api 'implario:java-tools:1.1.3'
        api 'dev.implario:nettier:1.2.1'

        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        compileOnly 'org.projectlombok:lombok:1.18.12'

        testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
        testCompileOnly 'org.projectlombok:lombok:1.18.12'

        testImplementation 'org.mockito:mockito-core:4.8.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    publishing {
        repositories {
            mavenLocal()
            maven {
                name = "func"
                url = uri("https://repo.c7x.dev/repository/maven-releases")
                credentials {
                    username = System.getenv("CRI_REPO_LOGIN") ?: System.getenv("CRISTALIX_REPO_USERNAME")
                            ?: System.getenv("REPO_C7X_USERNAME")
                    password =
                            System.getenv("CRI_REPO_PASSWORD") ?: System.getenv("CRISTALIX_REPO_PASSWORD") ?: System.getenv(
                                    "REPO_C7X_PASSWORD"
                            )
                }
            }
        }

        publishing {
            def p = project
            publications {
                it.create(p.name, MavenPublication) {
                    it.groupId = p.group
                    it.artifactId = p.name
                    it.version = p.version
                    it.from(p.components['java'])
                }
            }
        }
    }
}
