apply plugin: 'maven-publish'

group 'dev.implario'
version '1.3.0'

allprojects {

    apply plugin: 'java'

    repositories {
        mavenCentral()
        maven {
            url "https://repo.implario.dev/public"
        }
        maven {
            url "https://repo.implario.dev/cristalix"
            credentials {
                username = System.getenv("IMPLARIO_REPO_USER")
                password = System.getenv("IMPLARIO_REPO_PASSWORD")
            }
        }
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.incremental = true
    }

    dependencies {
        annotationProcessor 'org.projectlombok:lombok:1.18.12'
        compileOnly 'org.projectlombok:lombok:1.18.12'
        compileOnly 'cristalix:dark-paper:21.02.03'
        compileOnly 'cristalix:bukkit-core:21.3.16'
        implementation 'implario:java-tools:1.1.3'
    }

    afterEvaluate {
        jar {
            from configurations.runtimeClasspath.collect({ it.isDirectory() ? it : zipTree(it) })
            duplicatesStrategy DuplicatesStrategy.EXCLUDE
        }
    }

}

publishing {
    repositories {
        if (System.getenv('CI') == null) {
            mavenLocal()
        } else {
            maven {
                url "https://repo.implario.dev/cristalix"
                credentials {
                    username = System.getenv("IMPLARIO_REPO_USER")
                    password = System.getenv("IMPLARIO_REPO_PASSWORD")
                }
            }
            maven {
                url = 'https://repository.anfanik.me/c7x/'
                credentials {
                    username System.getenv('A5K_USERNAME')
                    password System.getenv('A5K_PASSWORD')
                }
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            artifact jar
        }
    }
}

tasks.processResources {
    filter { it.replace('\$version', version as String) }
}